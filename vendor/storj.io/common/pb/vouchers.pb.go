// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: vouchers.proto

package pb

import (
	context "context"
	fmt "fmt"
	math "math"
	time "time"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"

	drpc "storj.io/drpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type VoucherResponse_Status int32

const (
	VoucherResponse_INVALID  VoucherResponse_Status = 0
	VoucherResponse_ACCEPTED VoucherResponse_Status = 1
	VoucherResponse_REJECTED VoucherResponse_Status = 2
)

var VoucherResponse_Status_name = map[int32]string{
	0: "INVALID",
	1: "ACCEPTED",
	2: "REJECTED",
}

var VoucherResponse_Status_value = map[string]int32{
	"INVALID":  0,
	"ACCEPTED": 1,
	"REJECTED": 2,
}

func (x VoucherResponse_Status) String() string {
	return proto.EnumName(VoucherResponse_Status_name, int32(x))
}

func (VoucherResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3659b9a115b8060d, []int{2, 0}
}

// Voucher is a signed message verifying that a node has been vetted by a particular satellite
type Voucher struct {
	SatelliteId          NodeID    `protobuf:"bytes,1,opt,name=satellite_id,json=satelliteId,proto3,customtype=NodeID" json:"satellite_id"`
	StorageNodeId        NodeID    `protobuf:"bytes,2,opt,name=storage_node_id,json=storageNodeId,proto3,customtype=NodeID" json:"storage_node_id"`
	Expiration           time.Time `protobuf:"bytes,3,opt,name=expiration,proto3,stdtime" json:"expiration"`
	SatelliteSignature   []byte    `protobuf:"bytes,4,opt,name=satellite_signature,json=satelliteSignature,proto3" json:"satellite_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Voucher) Reset()         { *m = Voucher{} }
func (m *Voucher) String() string { return proto.CompactTextString(m) }
func (*Voucher) ProtoMessage()    {}
func (*Voucher) Descriptor() ([]byte, []int) {
	return fileDescriptor_3659b9a115b8060d, []int{0}
}
func (m *Voucher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Voucher.Unmarshal(m, b)
}
func (m *Voucher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Voucher.Marshal(b, m, deterministic)
}
func (m *Voucher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Voucher.Merge(m, src)
}
func (m *Voucher) XXX_Size() int {
	return xxx_messageInfo_Voucher.Size(m)
}
func (m *Voucher) XXX_DiscardUnknown() {
	xxx_messageInfo_Voucher.DiscardUnknown(m)
}

var xxx_messageInfo_Voucher proto.InternalMessageInfo

func (m *Voucher) GetExpiration() time.Time {
	if m != nil {
		return m.Expiration
	}
	return time.Time{}
}

func (m *Voucher) GetSatelliteSignature() []byte {
	if m != nil {
		return m.SatelliteSignature
	}
	return nil
}

type VoucherRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoucherRequest) Reset()         { *m = VoucherRequest{} }
func (m *VoucherRequest) String() string { return proto.CompactTextString(m) }
func (*VoucherRequest) ProtoMessage()    {}
func (*VoucherRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3659b9a115b8060d, []int{1}
}
func (m *VoucherRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoucherRequest.Unmarshal(m, b)
}
func (m *VoucherRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoucherRequest.Marshal(b, m, deterministic)
}
func (m *VoucherRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoucherRequest.Merge(m, src)
}
func (m *VoucherRequest) XXX_Size() int {
	return xxx_messageInfo_VoucherRequest.Size(m)
}
func (m *VoucherRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VoucherRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VoucherRequest proto.InternalMessageInfo

type VoucherResponse struct {
	Voucher              *Voucher               `protobuf:"bytes,1,opt,name=voucher,proto3" json:"voucher,omitempty"`
	Status               VoucherResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=vouchers.VoucherResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *VoucherResponse) Reset()         { *m = VoucherResponse{} }
func (m *VoucherResponse) String() string { return proto.CompactTextString(m) }
func (*VoucherResponse) ProtoMessage()    {}
func (*VoucherResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3659b9a115b8060d, []int{2}
}
func (m *VoucherResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoucherResponse.Unmarshal(m, b)
}
func (m *VoucherResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoucherResponse.Marshal(b, m, deterministic)
}
func (m *VoucherResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoucherResponse.Merge(m, src)
}
func (m *VoucherResponse) XXX_Size() int {
	return xxx_messageInfo_VoucherResponse.Size(m)
}
func (m *VoucherResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VoucherResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VoucherResponse proto.InternalMessageInfo

func (m *VoucherResponse) GetVoucher() *Voucher {
	if m != nil {
		return m.Voucher
	}
	return nil
}

func (m *VoucherResponse) GetStatus() VoucherResponse_Status {
	if m != nil {
		return m.Status
	}
	return VoucherResponse_INVALID
}

func init() {
	proto.RegisterEnum("vouchers.VoucherResponse_Status", VoucherResponse_Status_name, VoucherResponse_Status_value)
	proto.RegisterType((*Voucher)(nil), "vouchers.Voucher")
	proto.RegisterType((*VoucherRequest)(nil), "vouchers.VoucherRequest")
	proto.RegisterType((*VoucherResponse)(nil), "vouchers.VoucherResponse")
}

func init() { proto.RegisterFile("vouchers.proto", fileDescriptor_3659b9a115b8060d) }

var fileDescriptor_3659b9a115b8060d = []byte{
	// 368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4e, 0xab, 0x40,
	0x14, 0xc6, 0x4b, 0x6f, 0x03, 0xe4, 0xd0, 0x4b, 0x7b, 0xe7, 0x6e, 0x90, 0x0d, 0x0d, 0xab, 0x26,
	0x26, 0x34, 0xc5, 0xc4, 0xb8, 0xb4, 0x2d, 0x2c, 0x30, 0x4d, 0x63, 0x68, 0xd3, 0x85, 0x9b, 0x86,
	0xca, 0x88, 0x24, 0x2d, 0x83, 0xcc, 0x60, 0x7c, 0x0c, 0xdf, 0xc3, 0x17, 0xf1, 0x19, 0x5c, 0xd4,
	0x07, 0xf0, 0x25, 0x0c, 0xc3, 0x1f, 0x4d, 0xac, 0xcb, 0x6f, 0xce, 0xef, 0x3b, 0xf3, 0x9d, 0x0f,
	0xd4, 0x47, 0x92, 0xdf, 0xde, 0xe3, 0x8c, 0x5a, 0x69, 0x46, 0x18, 0x41, 0x72, 0xad, 0x75, 0x88,
	0x48, 0x44, 0xca, 0x57, 0xdd, 0x88, 0x08, 0x89, 0x76, 0x78, 0xc4, 0xd5, 0x36, 0xbf, 0x1b, 0xb1,
	0x78, 0x8f, 0x29, 0x0b, 0xf6, 0x69, 0x09, 0x98, 0x1f, 0x02, 0x48, 0xeb, 0xd2, 0x89, 0xc6, 0xd0,
	0xa5, 0x01, 0xc3, 0xbb, 0x5d, 0xcc, 0xf0, 0x26, 0x0e, 0x35, 0x61, 0x20, 0x0c, 0xbb, 0x53, 0xf5,
	0xf5, 0x60, 0xb4, 0xde, 0x0e, 0x86, 0xb8, 0x20, 0x21, 0xf6, 0x1c, 0x5f, 0x69, 0x18, 0x2f, 0x44,
	0xe7, 0xd0, 0xa3, 0x8c, 0x64, 0x41, 0x84, 0x37, 0x09, 0x09, 0xb9, 0xab, 0x7d, 0xd4, 0xf5, 0xb7,
	0xc2, 0xb8, 0x0c, 0x91, 0x03, 0x80, 0x9f, 0xd2, 0x38, 0x0b, 0x58, 0x4c, 0x12, 0xed, 0xcf, 0x40,
	0x18, 0x2a, 0xb6, 0x6e, 0x95, 0x61, 0xad, 0x3a, 0xac, 0xb5, 0xaa, 0xc3, 0x4e, 0xe5, 0x62, 0xdd,
	0xf3, 0xbb, 0x21, 0xf8, 0xdf, 0x7c, 0x68, 0x04, 0xff, 0xbf, 0x02, 0xd3, 0x38, 0x4a, 0x02, 0x96,
	0x67, 0x58, 0xeb, 0x14, 0x09, 0x7c, 0xd4, 0x8c, 0x96, 0xf5, 0xc4, 0xec, 0x83, 0x5a, 0x1d, 0xeb,
	0xe3, 0x87, 0x1c, 0x53, 0x66, 0xbe, 0x08, 0xd0, 0x6b, 0x9e, 0x68, 0x4a, 0x12, 0x8a, 0xd1, 0x29,
	0x48, 0x55, 0x99, 0xbc, 0x02, 0xc5, 0xfe, 0x67, 0x35, 0x65, 0xd7, 0x6c, 0x4d, 0xa0, 0x0b, 0x10,
	0x29, 0x0b, 0x58, 0x4e, 0xf9, 0xe1, 0xaa, 0x3d, 0xf8, 0xc9, 0x56, 0x7b, 0xad, 0x25, 0xe7, 0xfc,
	0x8a, 0x37, 0xc7, 0x20, 0x96, 0x2f, 0x48, 0x01, 0xc9, 0x5b, 0xac, 0x27, 0x73, 0xcf, 0xe9, 0xb7,
	0x50, 0x17, 0xe4, 0xc9, 0x6c, 0xe6, 0x5e, 0xaf, 0x5c, 0xa7, 0x2f, 0x14, 0xca, 0x77, 0xaf, 0xdc,
	0x59, 0xa1, 0xda, 0xf6, 0x1c, 0xe4, 0x6a, 0x29, 0x45, 0x97, 0x20, 0x55, 0x47, 0x20, 0xed, 0xc8,
	0x9f, 0x7c, 0xa2, 0x9f, 0xfc, 0x9a, 0xc6, 0x6c, 0x4d, 0x3b, 0x37, 0xed, 0x74, 0xbb, 0x15, 0x79,
	0xdd, 0x67, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x1f, 0x45, 0xc2, 0x51, 0x02, 0x00, 0x00,
}

type DRPCVouchersClient interface {
	DRPCConn() drpc.Conn

	Request(ctx context.Context, in *VoucherRequest) (*VoucherResponse, error)
}

type drpcVouchersClient struct {
	cc drpc.Conn
}

func NewDRPCVouchersClient(cc drpc.Conn) DRPCVouchersClient {
	return &drpcVouchersClient{cc}
}

func (c *drpcVouchersClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcVouchersClient) Request(ctx context.Context, in *VoucherRequest) (*VoucherResponse, error) {
	out := new(VoucherResponse)
	err := c.cc.Invoke(ctx, "/vouchers.Vouchers/Request", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCVouchersServer interface {
	Request(context.Context, *VoucherRequest) (*VoucherResponse, error)
}

type DRPCVouchersDescription struct{}

func (DRPCVouchersDescription) NumMethods() int { return 1 }

func (DRPCVouchersDescription) Method(n int) (string, drpc.Handler, interface{}, bool) {
	switch n {
	case 0:
		return "/vouchers.Vouchers/Request",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVouchersServer).
					Request(
						ctx,
						in1.(*VoucherRequest),
					)
			}, DRPCVouchersServer.Request, true
	default:
		return "", nil, nil, false
	}
}

func DRPCRegisterVouchers(srv drpc.Server, impl DRPCVouchersServer) {
	srv.Register(impl, DRPCVouchersDescription{})
}

type DRPCVouchers_RequestStream interface {
	drpc.Stream
	SendAndClose(*VoucherResponse) error
}

type drpcVouchersRequestStream struct {
	drpc.Stream
}

func (x *drpcVouchersRequestStream) SendAndClose(m *VoucherResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VouchersClient is the client API for Vouchers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VouchersClient interface {
	Request(ctx context.Context, in *VoucherRequest, opts ...grpc.CallOption) (*VoucherResponse, error)
}

type vouchersClient struct {
	cc *grpc.ClientConn
}

func NewVouchersClient(cc *grpc.ClientConn) VouchersClient {
	return &vouchersClient{cc}
}

func (c *vouchersClient) Request(ctx context.Context, in *VoucherRequest, opts ...grpc.CallOption) (*VoucherResponse, error) {
	out := new(VoucherResponse)
	err := c.cc.Invoke(ctx, "/vouchers.Vouchers/Request", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VouchersServer is the server API for Vouchers service.
type VouchersServer interface {
	Request(context.Context, *VoucherRequest) (*VoucherResponse, error)
}

func RegisterVouchersServer(s *grpc.Server, srv VouchersServer) {
	s.RegisterService(&_Vouchers_serviceDesc, srv)
}

func _Vouchers_Request_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoucherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VouchersServer).Request(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vouchers.Vouchers/Request",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VouchersServer).Request(ctx, req.(*VoucherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Vouchers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vouchers.Vouchers",
	HandlerType: (*VouchersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Request",
			Handler:    _Vouchers_Request_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vouchers.proto",
}
